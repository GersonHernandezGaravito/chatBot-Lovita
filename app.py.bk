#Para crear el ambiente virtual
#python3 -m venv .venv
#source .venv/bin/activate

from __future__ import print_function
from geventwebsocket import WebSocketServer, WebSocketApplication, Resource
#python3.7 -m pip install werkzeug
from werkzeug.debug import DebuggedApplication
from flask import Flask, render_template, request
import json

#python3.7 -m pip install gevent
from gevent import monkey

#db and aiml imports
#python3.7 -m pip3.7 install tinydb
from tinydb import TinyDB, Query
import os
#python3.7 -m pip install python-aiml
import aiml

monkey.patch_all()

# Para la interfaz y otras cosas
flask_app = Flask(__name__)
flask_app.debug = True

k = aiml.Kernel()

if os.path.exists(BRAIN_FILE):
    print("Cargando desde archivo cerebral file: " + BRAIN_FILE)
    k.loadBrain(BRAIN_FILE)
else:
    print("Parsing aiml files")
    k.bootstrap(learnFiles="std-startup.aiml", commands="load aiml b")
    print("Cargando Skynet: " + BRAIN_FILE)
    k.saveBrain(BRAIN_FILE)


db = TinyDB('conversations.json')
Usuario = Query()

BRAIN_FILE = "brain.dump"

#librerías para conexion a facebook
from pymessenger.bot import Bot

ACCESS_TOKEN = 'EAAFZBSupvax8BAKZCEOyv3sEjOWlkhOC802XZCVRj2SiaezAIzbJHfieA6BecrPVcoaK3UeFgckd6FZCm5856kgbqDRK9BWjEvCGAvKWZAsJx421Qser2HVkrtUTAcHVpvPnjuEeACvDYYTqV2Kx6TOHjiOVc82S4DGOFIQAVgwZDZD'
VERIFY_TOKEN = 'TESTINGTOKEN'
bot = Bot(ACCESS_TOKEN)

#class ChatApplication(WebSocketApplication):


#We will receive messages that Facebook sends our bot at this endpoint 
@flask_app.route("/", methods=['GET', 'POST'])
def receive_message():
    if request.method == 'GET':
        token_enviado = request.args.get("hub.verify_token")
        return verificar_token(token_enviado)
    else:
        # Obtener el mensaje
       output = request.get_json()
       for event in output['entry']:
          messaging = event['messaging']
          for message in messaging:
            if message.get('message'):
                #Guarda el ID del usuario para responder
                id_usuario = message['sender']['id']
                if message['message'].get('text'):
                    mensaje_recibido = message['message'].get('text')
                    mensaje_respuesta(id_usuario, mensaje_recibido)

                #if user sends us a GIF, photo,video, or any other non-text item
                if message['message'].get('attachments'):
                    mensaje_respuesta(id_usuario, response_sent_nontext)
                
    return "Message Processed"


def verificar_token(token_enviado):
    #take token sent by facebook and verify it matches the verify token you sent
    #if they match, allow the request, else return an error 
    if token_enviado == VERIFY_TOKEN:
        return request.args.get("hub.challenge")
    return 'Invalid verification token'


#Se usa la librería PyMessenger para responder al usuario que envió el mensaje
def mensaje_respuesta(id_usuario, response):
    bot.send_text_message(id_usuario, 'holaaaa')
    return "success"

if __name__ == "__main__":
    flask_app.run()